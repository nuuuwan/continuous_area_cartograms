import json
import os

from gig import Ent, EntType
from utils import File, JSONFile


def expand_data(data, ent_type):
    ents = Ent.list_from_type(ent_type)

    name_to_id = {ent.name: ent.id for ent in ents}

    idx_renamed = {}
    for name, points in data["idx"].items():
        id = name_to_id[name]
        idx_renamed[id] = points
    data["idx"] = idx_renamed

    idx2_norm = {}
    for group_type, id_to_polygons in data["idx2"].items():
        idx2_norm[group_type] = {}
        for id, polygons in id_to_polygons.items():
            norm_polygons = [
                [[round(x, 2) for x in point] for point in polygon]
                for polygon in polygons
            ]
            idx2_norm[group_type][id] = norm_polygons
    data["idx2"] = idx2_norm

    return data


def run(ent_type, example_name):
    hexbin_data_path = os.path.join(
        "examples", example_name, "hexbin.svg.json"
    )
    data = JSONFile(hexbin_data_path).read()
    expanded_data = expand_data(data, ent_type)

    output_path = hexbin_data_path + ".js"
    lines = [
        "// Auto Generated by build_hexagon_map_data.py",
        "",
        "const data = " + json.dumps(expanded_data, indent=2) + ";",
        "",
        "export default data;",
    ]
    File(output_path).write_lines(lines)


if __name__ == "__main__":
    for [ENT_TYPE, EXAMPLE_NAME] in [
        # [EntType.PD, 'lk_pds_in_units'],
        [EntType.ED, "lk_eds_in_units"],
        # [EntType.PROVINCE, 'lk_provinces_in_units'],
    ]:
        run(ENT_TYPE, EXAMPLE_NAME)
